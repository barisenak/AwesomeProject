# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  before_all do
    ENV["FIREBASE_LOGIN_CREDENTIALS"] = "fastlane/firebase_login_credentials.json"
    ENV["FIREBASE_APP_ID"] = "1:59572268623:android:5c083adc82803ea967443a"
    ENV["FIREBASE_TOKEN"] = "1//0ck6kOYc48VlACgYIARAAGAwSNwF-L9IrpZBKfo9P71dyU_CMzWCdTL8KxV_yjdsmEfebSUvuZGtASXFY3wq88EFrbkQO3-qnp4Y"
  end

  desc "Submit a new Google Test Build to Firebase App Distribution"
    lane :beta do
        increment_version_code(
        )
        value = get_version_name(
          ext_constant_name: "versionName"
        )
        increment_version_name(
          gradle_file_path: './android/app/build.gradle'
        )

        gradle(task: "build", project_dir: './android')

      # find apk path
     output_path = "./android/app/build/outputs/apk/release/"
     output_json_path = output_path + "output-metadata.json"
     build_output = load_json(json_path: output_json_path)
     elements = build_output["elements"][0]
     apk_path = output_path + elements["outputFile"]

     release_note_information = " BRANCH => #{git_branch} - developer: #{last_git_commit[:author]}"
     release_note = "#{release_note_information}"

     firebase_app_distribution(
           app: ENV["FIREBASE_APP_ID"],
           firebase_cli_token: ENV["FIREBASE_TOKEN"],
           android_artifact_path: apk_path,
           android_artifact_type: "APK",
           release_notes: "#{release_note}",
           testers: "awesomeproject@awesomeproject-378511.iam.gserviceaccount.com",
           service_credentials_file: ENV["FIREBASE_LOGIN_CREDENTIALS"],
           debug: true
     )
    end

end

